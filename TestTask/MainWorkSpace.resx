<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA2EwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABLwSURBVHja7Z17cJXlmcA/V6b6h9Wt5CTnhIOw1u12rd1pd9uOM52u3c7qjGvX7XRW
        /ig74mx1u9uxdutWZ7d2V0lOgqJYASGQQE4ONxGBQCAEEiCQC7mRBEISSLiGL/d7YEVdd332eb9zToQC
        5ook+X7PzG9OBMTxO8/ze+/vZ1kEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRA3KzwZSZYnlGx5gklW
        rCHDEIh83kRCSZY3c4nl273S8uWsgClD9PtMcT7jd6da3p3LLO/WxZZ32xIK8vMIp9DTTcGHC92bHjAC
        uEN/3a/F/21PRuAxFcMc/b0nbxqhpHnezMXPeneteMG7KwWmCL5dKb/2Zqc8581e/rQve/kj8TkrZ8dl
        LZ1+55OP3+KIYddyFcGblm/7Ygp13Ft7LXrP6nBL71nrCOBu/fmvteDmKzuVU0q3clG5pHx00wglf+Tb
        vvST+LxVEp+XBlML/V7TPlYGlGbfntQy356Vv1M5POHbucz7oIilclAJvGX5spZSuGMufG3p/3BlgtPi
        x20IGAHM1CJ7Vjmo9Csy4Qgliy/rbYnfuwrcQl7aB/G5qUd12Peyd8fyP/l+RASx6wLaK6BHMMoxfqIV
        o5iuvorgTuUf9edK5eMJWfgIAAy5qSd1SPDvKoJYX+4qRwC+HW9T0CMa60cm9HzB11QEga/rP7+nfDCh
        Cx8BwKc9gv+L35O6T4cGD93TV215dyx1JgyJYU30BRxmrku+RSXwIy2q2klR+AgAru4NNPtyUp6K3bhw
        mjfrbe0JIIFhFL92+1e9cqsW0zylbVIVPwKAq3sD/TokeD7u3Te/4NtuJLCcQr9WxJjlvfSANSPtpVti
        g0lztZi6Jl3xIwC4tgQuqgR+4Q0uuNW7TYcD25kTuHLCb9PL1nQt/rg1zrr+I1pI9qQsfgQA15dAj2/X
        ijkzi4OWZ+sSK3bvWxT+YNc/dUF4jT8jcJ8WUfmkLX4EAJ89J9Dgy17+TV/2CmvmlgwK3yn+UKLlcUi4
        LTYjsHxSFz8CgCHw7Vm50bt9yR0+s404iy3E2u2fH9nLH3hMC6gPAcAUHwpc8uWsmBu/d7Xlzfydu4s/
        PpQc3uiTEfiifm6f9MWPAGA4vYDc1AJv1tLp3uxlVnz2Gy42wOLfhE/1ZSQ9qsUzgADAJb2AD305KT/x
        7U61ZuU96+a9/lr86YFpWjgrpkTxIwAY/lzAu94tb95udgm6M0SiW35n62cDAgB3rQikNfuyl/+pOUrs
        yvAufj5ygYez3fd9BAAuGwZ87NuV8lPnLoFMF64GxGQkW96gc9pv/pQpfgQAI9sXsOhWrQVf5mKXjv+D
        gdu1aDYgAHAle1bmercsvtOVW4PNZR/Kl7RoChEAuHMiMPW4d8cyrzfbhQeEPOGLPuK0aOoQALhzP0Ba
        kzdnxQxzgaw7BZCRFK9FcwYBgDsnAlfZ8blpfsWFZwDC12j7J/XJPwQAY8NW/AoCQACAABAAAgAEgAAQ
        ACAABIAAAAEgAAQACAABIABAAAgAAQACQAAIABAAAkAAgAAQAAIABIAAEAAgAASAAAABIAAEAAgAASAA
        QAAIAAEAAkAACAAQAAJAAIAAEAACAASAABAAIAAEgAAAASAABAAIAAEgAEAACAABAAJAAAgAEAACQACA
        ABAAAgAEgAAQACAABIAAAAEgAAQACAABIABAAAiABAcEgAAAEAACAEAACAAAASAAAASAAAABIAAEAAgA
        ASAAQAAIAAEAAkAACAAQAAJAAIAAEAACAASAABAAIAAEgAAAASAABAAIAAEgAEAACAABAAJAAAgAEAAC
        QACAABAAAgAEgAAQACAABIAAAAEgAAQACAABIABAAAgAAQACQAAIABAAAkAAgAAQAAIABIAAEAAgAASA
        AAABIAAEAAgAASAAQAAIAAEAAkAACAAQAAJAAIAAEAACAASAABAAIAAEAIAAEAAAAkAAAAgAAQAgAAQA
        gAAQACAABIAAAAEgAAQACAABIABAAAgAAQACQAAIABAAAkAAgAAQAAIABIAAEAAgAASAAAABIAAEAAgA
        ASAAQAAIAAEAAkAACAAQAAJAAIAAEAACAASAABAAIAAEgAAAASAABAAIAAEgAEAACAABAAJAAAgAEAAC
        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
        10I53oirtMUAAAAASUVORK5CYII=
</value>
  </data>
</root>